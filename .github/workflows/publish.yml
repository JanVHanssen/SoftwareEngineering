name: Publish Package

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  PROJECT_DIR: backend-2425-JanVHanssen/janvhanssen-backend
  MAVEN_SETTINGS: ~/.m2/settings.xml

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Genereer een uniek versienummer voor snapshots
      - name: Determine version
        id: version
        run: |
          if [[ ${{ github.ref }} == "refs/heads/main" ]]; then
            # Voor main branch: gebruik pom.xml versie + timestamp voor snapshots
            echo "VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)-$(date +%s)" >> $GITHUB_OUTPUT
          else
            # Voor feature branches: altijd snapshot
            echo "VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)-SNAPSHOT" >> $GITHUB_OUTPUT
          fi

      - uses: actions/setup-java@v4
        with:
          distribution: microsoft
          java-version: "21"

      - name: Configure Maven for GitHub Packages
        run: |
          mkdir -p ~/.m2
          cat > ${{ env.MAVEN_SETTINGS }} <<EOF
          <settings>
            <servers>
              <server>
                <id>github</id>
                <username>github</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Build & publish to GitHub Packages
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          # Update versie in pom.xml als het een snapshot is
          if [[ "${{ steps.version.outputs.VERSION }}" == *"-SNAPSHOT" ]]; then
            mvn -B versions:set -DnewVersion=${{ steps.version.outputs.VERSION }}
          fi

          mvn -B -s ${{ env.MAVEN_SETTINGS }} -DskipTests clean deploy
