name: Publish Package

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  PROJECT_DIR: backend-2425-JanVHanssen/janvhanssen-backend
  MAVEN_SETTINGS: ~/.m2/settings.xml

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Vereist voor tag detectie

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: microsoft
          java-version: "21"
          server-id: github
          server-username: github
          server-password: ${{ secrets.PAT_TOKEN }}

      - name: Configure Maven
        run: |
          mkdir -p ~/.m2
          cat > ${{ env.MAVEN_SETTINGS }} <<EOF
          <settings>
            <servers>
              <server>
                <id>github</id>
                <username>github</username>
                <password>${{ secrets.PAT_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Determine version
        id: version
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          # Haal laatste tag op
          git fetch --tags
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")

          # Auto-increment patch version
          NEW_VERSION=$(echo $LATEST_TAG | awk -F. '{$NF++; print $1"."$2"."$NF}')

          # Update pom.xml
          mvn versions:set -DnewVersion=$NEW_VERSION
          echo "version=${NEW_VERSION}" >> $GITHUB_OUTPUT
          echo "##[set-output name=version;]${NEW_VERSION}"

      - name: Build and publish
        run: |
          mvn -B deploy -DskipTests \
           -DaltDeploymentRepository=github::default::https://maven.pkg.github.com/${{ env.OWNER }}/${{ env.REPO }}

      - name: Create git tag
        if: success()
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag ${{ steps.version.outputs.version }}
          git push origin ${{ steps.version.outputs.version }}
